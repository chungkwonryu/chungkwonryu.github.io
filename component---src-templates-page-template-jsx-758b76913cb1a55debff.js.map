{"version":3,"file":"component---src-templates-page-template-jsx-758b76913cb1a55debff.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Header/Header.jsx","webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/SEO/SEO.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetSearch.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/components/Page/Page.jsx","webpack://gatsby-starter-blog/./src/templates/page-template.jsx"],"sourcesContent":["import React from \"react\";\n\n// 각 페이지의 헤더 (Navigation 아래의 제목을 보여주는 부분)\nconst Header = ({ title }) => {\n\treturn (\n\t\t<header className=\"border-b-2 border-b-stone-300\">\n\t\t\t<div className=\"mx-auto max-w-full py-0 px-6 w-full\">\n\t\t\t\t<h1 className=\"text-3xl font-bold m-0 py-8\">{title}</h1>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;","import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = config.siteUrl + config.pathPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React, { Component } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer>\n            <WidgetTitle title={config.searchWidgetTitle} />\n            <div className=\"flex items-center\">\n              <form method=\"GET\">\n                <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n                  <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n                    <button type=\"submit\" className=\"p-1 focus:outline-none focus:shadow-outline\">\n                      <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-6 h-6\">\n                        <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                      </svg>\n                    </button>\n                  </span>\n                  <input type=\"search\" name=\"q\" className=\"py-2 text-sm rounded-md pl-10 focus:outline-none focus:bg-white focus:text-gray-900\" placeholder=\"Search...\" autoComplete=\"off\" />\n                </div>\n              </form>\n            </div>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\n\n// Page에서 본문을 감싸는 컴포넌트\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <article className=\"prose lg:prose-lg\">\n      <div className=\"py-6\"\n        dangerouslySetInnerHTML={{ __html: postNode.html }}\n      />\n    </article>\n  );\n};\n\nexport default Page;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;"],"names":["title","className","content","sidebar","SEO","render","postNode","postPath","postSEO","this","props","description","keywords","postURL","image","postMeta","frontmatter","excerpt","cover","getSrc","config","blogURL","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","rel","href","useSlash","type","JSON","stringify","property","Component","children","Link","key","to","getCategoryPath","categoryList","map","category","getTagPath","tagList","tag","latestPostEdges","postList","getPostList","post","slug","links","length","link","label","WidgetSearch","method","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","placeholder","autoComplete","WidgetLatestPosts","id","dangerouslySetInnerHTML","__html","html","data","pageContext","markdownRemark","Sidebar","Helmet","Header","MainContainer"],"sourceRoot":""}