{"version":3,"file":"component---src-templates-page-template-jsx-ee5f3f9f625ff728e76c.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/SEO/SEO.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/components/Page/Page.jsx","webpack://gatsby-starter-blog/./src/templates/page-template.jsx"],"sourcesContent":["import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = config.siteUrl + config.pathPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700 cursor-pointer\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\n\n// Page에서 본문을 감싸는 컴포넌트\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <article className=\"prose dark:prose-invert lg:prose-lg\">\n      <div className=\"py-6\"\n        dangerouslySetInnerHTML={{ __html: postNode.html }}\n      />\n    </article>\n  );\n};\n\nexport default Page;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;"],"names":["content","sidebar","className","SEO","render","postNode","postPath","postSEO","this","props","title","description","keywords","postURL","image","postMeta","frontmatter","excerpt","cover","getSrc","config","blogURL","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","rel","href","useSlash","type","JSON","stringify","property","Component","children","Link","key","to","getCategoryPath","categoryList","map","category","getTagPath","tagList","tag","latestPostEdges","postList","getPostList","post","slug","links","length","link","label","WidgetLatestPosts","id","dangerouslySetInnerHTML","__html","html","data","pageContext","markdownRemark","Sidebar","Helmet","Header","MainContainer"],"sourceRoot":""}