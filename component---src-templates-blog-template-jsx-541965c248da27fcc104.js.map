{"version":3,"file":"component---src-templates-blog-template-jsx-541965c248da27fcc104.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/Pagination/PaginationItem.jsx","webpack://gatsby-starter-blog/./src/components/Pagination/Pagination.jsx","webpack://gatsby-starter-blog/./src/components/Post/PostDate.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Article.jsx","webpack://gatsby-starter-blog/./src/components/Button/Button.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/templates/blog-template.jsx"],"sourcesContent":["import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst PaginationItem = (props) => {\n  const { value, currentPage, pathPrefix, pathPrefixPagination } = props;\n  const isLeft = value === -1;\n  const isRight = value === -2;\n\n  let to = pathPrefix;\n\n  if (isLeft) {\n    to += `${pathPrefixPagination}/${currentPage - 3}`;\n  } else if (isRight) {\n    to += `${pathPrefixPagination}/${currentPage + 3}`;\n  } else if (value !== 1) {\n    to += `${pathPrefixPagination}/${value}`;\n  }\n\n  return (\n    <div className=\"border border-gray-400 active:bg-gray-400 min-h-[4.5rem] min-w-[4.8rem] py-3 px-4\">\n      <Link\n        to={to}\n        activeClassName=\"active\"\n      >\n        {isLeft && (\n          <FontAwesomeIcon icon={[\"fas\", \"angle-double-left\"]} size=\"xs\" />\n        )}\n        {value > 0 && value}\n        {isRight && (\n          <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} size=\"xs\" />\n        )}\n      </Link>\n    </div>\n  );\n};\n\nexport default PaginationItem;","import React from \"react\";\nimport PaginationItem from \"./PaginationItem\";\n\n// condition: totalPages >= 2\nconst MAX_PAGINATION_ITEMS = 7;\n\nconst PAGINATION_LEFT = -1;\nconst PAGINATION_RIGHT = -2;\n\n// e.g. there is 9 pages\n// [1], 2, 3, 4, 5, -2, 9\n// 1, [2], 3, 4, 5, -2, 9\n// 1, 2, [3], 4, 5, -2, 9\n// 1, 2, 3, [4], 5, -2, 9\n// 1, -1, 4, [5], 6, -2, 9\n// 1, -1, 5, [6], 7, -2, 9\n// 1, -1, 5, 6, [7], -2, 9\n// 1, -1, 5, 6, 7, [8], 9\n// 1, -1, 5, 6, 7, 8, 9\n\nconst Pagination = (props) => {\n  const {\n    currentPage,\n    totalPages,\n    pathPrefix,\n    pathPrefixPagination,\n  } = props;\n\n  const respArr = [];\n  if (totalPages <= MAX_PAGINATION_ITEMS) {\n    for (let i = 1; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else if (currentPage <= 4) {\n    for (let i = 1; i <= MAX_PAGINATION_ITEMS - 2; i++) {\n      respArr.push(i);\n    }\n    respArr.push(PAGINATION_RIGHT, totalPages);\n  } else if (totalPages - currentPage < 4) {\n    respArr.push(1, PAGINATION_LEFT);\n    for (let i = totalPages - 4; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else {\n    respArr.push(\n      1,\n      PAGINATION_LEFT,\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      PAGINATION_RIGHT,\n      totalPages\n    );\n  }\n\n  return (\n    <>\n      {totalPages >= 2 && (\n        <div\n          className=\"items-center flex justify-center mt-8 pt-3\">\n          {respArr.map((value, index) => (\n            <PaginationItem\n              key={`${pathPrefix}-${index}`}\n              value={value}\n              currentPage={currentPage}\n              pathPrefix={pathPrefix}\n              pathPrefixPagination={pathPrefixPagination}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pagination;","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date }) => (\n  <div className=\"text-neutral-500 pb-4\">\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\n\nconst Thumbnail = ({ post }) => {\n  const thumbnail = post.cover ? (\n    <div className=\"max-w-full w-[660px]\">\n      <Link\n        to={post.slug}\n        key={post.title}\n      >\n        <GatsbyImage\n          image={getImage(post.cover)}\n          alt=\"thumbnail image\"\n        />\n      </Link>\n    </div>\n  ) : null;\n\n  return thumbnail;\n};\n\nexport default Thumbnail;","import React from \"react\";\nimport PostDate from \"../Post/PostDate\";\nimport { Link } from \"gatsby\";\n\nconst PostInfo = ({ post }) => (\n  <div className=\"mt-4\">\n    <Link to={post.slug} key={post.title} >\n      <h2 className=\"text-3xl font-bold mb-2 text-sky-500 hover:text-sky-700\">\n        <small>{post.title}</small>\n      </h2>\n    </Link>\n    <div className=\"mb-4\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\n\nconst Article = ({ post, hasThumbnail }) => (\n  <article\n    key={post.title}\n    className=\"flex flex-col py-12 border-b-2 border-slate-600\"\n  >\n    {hasThumbnail && <Thumbnail post={post} />}\n    <PostInfo post={post} />\n  </article>\n);\n\nexport default Article;","import React from \"react\";\n\nconst Button = (props) => (\n  <button\n    className=\"btn-primary\"\n    {...props}\n  />\n);\n\nexport default Button;","import React, { Component } from \"react\";\nimport Article from \"./Article\";\nimport Button from \"../Button/Button\";\n\nclass PostListing extends Component {\n  state = {\n    maxPosts:\n      (this.props.hasLoadmore || this.props.forcePostsPerPage) &&\n        this.props.postsPerPage\n        ? this.props.postsPerPage\n        : this.props.postList.length,\n  };\n\n  handleLoadmore = () => {\n    const { hasLoadmore = false, numberLoadmore } = this.props;\n\n    if (!hasLoadmore) return;\n\n    this.setState((prevState) => ({\n      maxPosts: prevState.maxPosts + numberLoadmore,\n    }));\n  };\n\n  render() {\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\n    const { maxPosts } = this.state;\n\n    return (\n      <>\n        <div>\n          {postList.map((post, index) => {\n            if (index < maxPosts)\n              return (\n                <Article key={post.title} post={post} hasThumbnail={hasThumbnail} />\n              );\n            return null;\n          })}\n        </div>\n        {hasLoadmore && maxPosts < postList.length && (\n          <div className=\"text-center mt-8 pt-3\">\n            <Button onClick={this.handleLoadmore}>\n              {this.props.btnLoadmore}\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PostListing;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { getPostList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nconst BlogTemplate = ({ data, pageContext }) => {\n  const { categoryList, tagList, latestPostEdges, currentPage, totalPages } =\n    pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const postList = getPostList(postEdges);\n  const content = (\n    <>\n      <PostListing\n        postList={postList}\n        hasThumbnail={config.blogHasThumbnail}\n        hasLoadmore={false}\n      />\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        pathPrefix={config.pathPrefixBlog}\n        pathPrefixPagination={config.pathPrefixPagination}\n      />\n    </>\n  );\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n\n  return (\n    <Layout>\n      <div className=\"blog-container\">\n        <Helmet title={`${config.blogHeader} - ${config.siteTitle}`} />\n        <MainContainer content={content} sidebar={sidebar} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPage($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["content","sidebar","className","props","value","currentPage","pathPrefix","pathPrefixPagination","isLeft","isRight","to","Link","activeClassName","icon","size","totalPages","respArr","i","push","MAX_PAGINATION_ITEMS","map","index","key","date","config","formatDate","post","cover","slug","title","G","image","getImage","alt","excerpt","PostDate","hasThumbnail","PostListing","state","maxPosts","hasLoadmore","forcePostsPerPage","postsPerPage","postList","length","handleLoadmore","numberLoadmore","setState","prevState","render","this","onClick","btnLoadmore","Component","children","getCategoryPath","categoryList","category","getTagPath","tagList","tag","latestPostEdges","getPostList","links","link","label","href","url","WidgetLatestPosts","data","pageContext","postEdges","allMarkdownRemark","edges"],"sourceRoot":""}