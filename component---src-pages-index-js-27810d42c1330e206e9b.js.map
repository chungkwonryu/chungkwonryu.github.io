{"version":3,"file":"component---src-pages-index-js-27810d42c1330e206e9b.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Header/Header.jsx","webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/Post/PostDate.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Article.jsx","webpack://gatsby-starter-blog/./src/components/Button/Button.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-blog/./src/components/SEO/SEO.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetSearch.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\n// 각 페이지의 헤더 (Navigation 아래의 제목을 보여주는 부분)\nconst Header = ({ title }) => {\n\treturn (\n\t\t<header className=\"border-b-2 border-b-stone-300\">\n\t\t\t<div className=\"mx-auto max-w-full py-0 px-6 w-full\">\n\t\t\t\t<h1 className=\"text-3xl font-bold m-0 py-8\">{title}</h1>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;","import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date }) => (\n  <div className=\"text-slate-600 pb-4\">\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\n\nconst Thumbnail = ({ post }) => {\n  const thumbnail = post.cover ? (\n    <div className=\"max-w-full w-[660px]\">\n      <Link\n        to={post.slug}\n        key={post.title}\n      >\n        <GatsbyImage\n          image={getImage(post.cover)}\n          alt=\"thumbnail image\"\n        />\n      </Link>\n    </div>\n  ) : null;\n\n  return thumbnail;\n};\n\nexport default Thumbnail;","import React from \"react\";\nimport PostDate from \"../Post/PostDate\";\nimport { Link } from \"gatsby\";\n\nconst PostInfo = ({ post }) => (\n  <div className=\"mt-4\">\n    <Link to={post.slug} key={post.title} >\n      <h2 className=\"text-3xl font-bold mb-2 text-sky-500 hover:text-sky-700\">\n        <small>{post.title}</small>\n      </h2>\n    </Link>\n    <div className=\"mb-4\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\n\nconst Article = ({ post, hasThumbnail }) => (\n  <article\n    key={post.title}\n    className=\"flex flex-col py-12 border-b-2 border-slate-600\"\n  >\n    {hasThumbnail && <Thumbnail post={post} />}\n    <PostInfo post={post} />\n  </article>\n);\n\nexport default Article;","import React from \"react\";\n\nconst Button = (props) => (\n  <button\n    className=\"bg-sky-500 border-sky-500 text-white items-center border rounded-md cursor-pointer\"\n    {...props}\n  />\n);\n\nexport default Button;","import React, { Component } from \"react\";\nimport Article from \"./Article\";\nimport Button from \"../Button/Button\";\n\nclass PostListing extends Component {\n  state = {\n    maxPosts:\n      (this.props.hasLoadmore || this.props.forcePostsPerPage) &&\n        this.props.postsPerPage\n        ? this.props.postsPerPage\n        : this.props.postList.length,\n  };\n\n  handleLoadmore = () => {\n    const { hasLoadmore = false, numberLoadmore } = this.props;\n\n    if (!hasLoadmore) return;\n\n    this.setState((prevState) => ({\n      maxPosts: prevState.maxPosts + numberLoadmore,\n    }));\n  };\n\n  render() {\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\n    const { maxPosts } = this.state;\n\n    return (\n      <>\n        <div>\n          {postList.map((post, index) => {\n            if (index < maxPosts)\n              return (\n                <Article key={post.title} post={post} hasThumbnail={hasThumbnail} />\n              );\n            return null;\n          })}\n        </div>\n        {hasLoadmore && maxPosts < postList.length && (\n          <div className=\"text-center mt-8 pt-3\">\n            <Button onClick={this.handleLoadmore}>\n              {this.props.btnLoadmore}\n            </Button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PostListing;","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = config.siteUrl + config.pathPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React, { Component } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer>\n            <WidgetTitle title={config.searchWidgetTitle} />\n            <div className=\"flex items-center\">\n              <form method=\"GET\">\n                <div className=\"relative text-gray-600 focus-within:text-gray-400\">\n                  <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n                    <button type=\"submit\" className=\"p-1 focus:outline-none focus:shadow-outline\">\n                      <svg fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" className=\"w-6 h-6\">\n                        <path d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                      </svg>\n                    </button>\n                  </span>\n                  <input type=\"search\" name=\"q\" className=\"py-2 text-sm rounded-md pl-10 focus:outline-none focus:bg-white focus:text-gray-900\" placeholder=\"Search...\" autoComplete=\"off\" />\n                </div>\n              </form>\n            </div>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport SEO from \"../components/SEO/SEO\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport { getPostList, getTagCategoryList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    const postList = getPostList(postEdges);\n    const { tagList, categoryList } = getTagCategoryList(postList);\n\n    const content = (\n      <>\n        <PostListing\n          postList={postList}\n          hasThumbnail={config.homeHasThumbnail}\n          hasLoadmore={config.homeHasLoadmore}\n          postsPerPage={config.postsPerPage}\n          numberLoadmore={config.numberLoadmore}\n          btnLoadmore={config.btnLoadmore}\n          forcePostsPerPage={config.homeHasLoadmore == false}\n        />\n        {!config.homeHasLoadmore && postList.length > config.postsPerPage && (\n          <div>\n            <Link to={`${config.pathPrefixBlog}${config.pathPrefixPagination}/2`} >\n              {config.homeMoreArticles}\n            </Link>\n          </div>\n        )}\n      </>\n    );\n\n    const sidebar = (\n      <Sidebar\n        tagList={tagList}\n        categoryList={categoryList}\n        links={config.sidebarLinks}\n      />\n    );\n\n    const headerTitle = config.homeHeader\n      ? `${config.siteTitle} - ${config.homeHeader}`\n      : `${config.siteTitle}`;\n    \n    return (\n      <Layout>\n        <div>\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <Header title={headerTitle} />\n          <MainContainer content={content} sidebar={sidebar} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const indexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["title","className","content","sidebar","date","config","formatDate","post","cover","Link","to","slug","key","G","image","getImage","alt","excerpt","PostDate","hasThumbnail","props","PostListing","state","maxPosts","hasLoadmore","forcePostsPerPage","postsPerPage","postList","length","handleLoadmore","numberLoadmore","setState","prevState","render","this","map","index","onClick","btnLoadmore","Component","SEO","postNode","postPath","postSEO","description","keywords","postURL","postMeta","frontmatter","getSrc","blogURL","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","rel","href","useSlash","type","JSON","stringify","property","children","getCategoryPath","categoryList","category","getTagPath","tagList","tag","latestPostEdges","getPostList","links","link","label","WidgetSearch","method","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","placeholder","autoComplete","WidgetLatestPosts","Index","postEdges","data","allMarkdownRemark","edges","getTagCategoryList","headerTitle","React"],"sourceRoot":""}