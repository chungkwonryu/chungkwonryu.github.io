{"version":3,"file":"component---src-templates-tag-template-jsx-c07f36e6b1163009b2d4.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/Post/PostDate.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Article.jsx","webpack://gatsby-starter-blog/./src/components/Button/Button.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/templates/tag-template.jsx"],"sourcesContent":["import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date }) => (\n  <div className=\"text-neutral-500 pb-4\">\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;","import React from \"react\";\nimport PostDate from \"../Post/PostDate\";\nimport { Link } from \"gatsby\";\n\nconst PostInfo = ({ post }) => (\n  <div className=\"mt-4\">\n    <Link to={post.slug} key={post.title} >\n      <h2 className=\"text-3xl font-bold mb-2 text-sky-500 hover:text-sky-700\">\n        <small>{post.title}</small>\n      </h2>\n    </Link>\n    <div className=\"mb-4\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\n\nconst Thumbnail = ({ post }) => {\n  const baseImage = useStaticQuery(graphql`\n    query BaseImageQuery{\n      file(relativePath: { eq: \"images/basic-cover-660x400.png\" }) {\n        childImageSharp {\n          gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n        }\n      }\n    }\n  `);\n  const imagePath = post.cover ? post.cover : baseImage.file;\n  const thumbnail = (\n    <div className=\"max-w-full w-[660px]\">\n      <Link\n        to={post.slug}\n        key={post.title}\n      >\n        <GatsbyImage\n          image={getImage(imagePath)}\n          alt=\"thumbnail image\"\n        />\n      </Link>\n    </div>\n  );\n\n  return thumbnail;\n};\n\nexport default Thumbnail;","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\n\nconst Article = ({ post, hasThumbnail }) => {\n  return (\n    <article\n      key={post.title}\n      className=\"flex flex-col py-12 border-b-2 border-slate-600\"\n    >\n      {hasThumbnail && <Thumbnail post={post} />}\n      <PostInfo post={post} />\n    </article>\n  );\n};\n\nexport default Article;","import React from \"react\";\n\nconst Button = (props) => (\n  <button\n    className=\"btn-primary\"\n    {...props}\n  />\n);\n\nexport default Button;","import React, { useEffect, useState, Component } from \"react\";\nimport Article from \"./Article\";\nimport Button from \"../Button/Button\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostListing = (props) => {\n  const { postList, hasThumbnail = true } = props;\n\n  // current max posts to show\n  const maxPosts = config.postsPerPage;\n\n  // State for the list\n  const [list, setList] = useState([...postList.slice(0, maxPosts)]);\n\n  // State to trigger load more\n  const [loadMore, setLoadMore] = useState(false);\n\n  // State of whether there is more to load\n  const [hasMore, setHasMore] = useState(postList.length > maxPosts);\n  \n  // Load more button click handler\n  const handleLoadmore = () => {\n    setLoadMore(true);\n  };\n\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = list.length;\n      const isMore = currentLength < postList.length;\n      const nextResults = isMore\n        ? postList.slice(currentLength, currentLength + config.postsPerPage)\n        : []\n      setList([...list, ...nextResults]);\n      setLoadMore(false);\n    }\n    setHasMore(list.length < postList.length)\n  }, [loadMore])\n\n  return (\n    <>\n      <div>\n        {list.map((post, index) => {\n          return <Article key={post.title} post={post} hasThumbnail={hasThumbnail} />\n        })}\n      </div>\n      {hasMore && (\n        <div className=\"text-center mt-8 pt-3\">\n          <Button onClick={handleLoadmore}>\n            {config.btnLoadmore}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostListing;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700 cursor-pointer\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport { getPostList, getTagPathWithoutTrailingSlash } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nconst TagTemplate = ({ data, pageContext }) => {\n  const {\n    tag,\n    tagList,\n    categoryList,\n    latestPostEdges,\n  } = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const postList = getPostList(postEdges);\n  const content = (\n    <>\n      <PostListing\n        postList={postList}\n        hasThumbnail={config.tagHasThumbnail}\n      />\n    </>\n  );\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebar}\n    />\n  );\n  return (\n    <Layout>\n      <div className=\"tag-container\">\n        <Helmet title={`${config.tagHeader} ${tag} - ${config.siteTitle}`} />\n        <Header title={`${config.tagHeader} ${tag}`} />\n        <MainContainer content={content} sidebar={sidebar} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: {frontmatter: {date : DESC } }\n      filter: {frontmatter: { tags: { in: [$tag] }, template: { eq: \"post\" }, title: {ne: \"Dummy Post\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["content","sidebar","className","date","config","formatDate","post","Link","to","slug","key","title","excerpt","baseImage","useStaticQuery","imagePath","cover","file","G","image","getImage","alt","hasThumbnail","PostInfo","props","postList","maxPosts","list","setList","useState","slice","loadMore","setLoadMore","hasMore","setHasMore","length","useEffect","currentLength","nextResults","map","index","onClick","children","getCategoryPath","categoryList","category","getTagPath","tagList","tag","latestPostEdges","getPostList","links","link","label","href","url","WidgetLatestPosts","data","pageContext","postEdges","allMarkdownRemark","edges"],"sourceRoot":""}