{"version":3,"file":"component---src-pages-index-js-9c5f22e05bcf74a280b1.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/Post/PostDate.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Article.jsx","webpack://gatsby-starter-blog/./src/components/Button/Button.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-blog/./src/components/SEO/SEO.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-starter-blog/./src/components/Category/Category.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-starter-blog/./src/components/Tag/Tag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-starter-blog/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full\">\n    <div className=\"w-full pb-8 pt-3 lg:pr-12 lg:w-[calc(100%-330px)]\">\n      {content}\n    </div>\n    <div className=\"w-full pb-8 pt-3 lg:w-[330px]\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date }) => (\n  <div className=\"text-neutral-500 pb-4\">\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;","import React from \"react\";\nimport PostDate from \"../Post/PostDate\";\nimport { Link } from \"gatsby\";\n\nconst PostInfo = ({ post }) => (\n  <div className=\"mt-4\">\n    <Link to={post.slug} key={post.title} >\n      <h2 className=\"text-3xl font-bold mb-2 text-sky-500 hover:text-sky-700\">\n        <small>{post.title}</small>\n      </h2>\n    </Link>\n    <div className=\"mb-4\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\n\nconst Thumbnail = ({ post }) => {\n  const baseImage = useStaticQuery(graphql`\n    query BaseImageQuery{\n      file(relativePath: { eq: \"images/basic-cover-660x400.png\" }) {\n        childImageSharp {\n          gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n        }\n      }\n    }\n  `);\n  const imagePath = post.cover ? post.cover : baseImage.file;\n  const thumbnail = (\n    <div className=\"max-w-full w-[660px]\">\n      <Link\n        to={post.slug}\n        key={post.title}\n      >\n        <GatsbyImage\n          image={getImage(imagePath)}\n          alt=\"thumbnail image\"\n        />\n      </Link>\n    </div>\n  );\n\n  return thumbnail;\n};\n\nexport default Thumbnail;","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\n\nconst Article = ({ post, hasThumbnail }) => {\n  return (\n    <article\n      key={post.title}\n      className=\"flex flex-col py-12 border-b-2 border-slate-600\"\n    >\n      {hasThumbnail && <Thumbnail post={post} />}\n      <PostInfo post={post} />\n    </article>\n  );\n};\n\nexport default Article;","import React from \"react\";\n\nconst Button = (props) => (\n  <button\n    className=\"btn-primary\"\n    {...props}\n  />\n);\n\nexport default Button;","import React, { useEffect, useState, Component } from \"react\";\nimport Article from \"./Article\";\nimport Button from \"../Button/Button\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostListing = (props) => {\n  const { postList, hasThumbnail = true } = props;\n\n  // current max posts to show\n  const maxPosts = config.postsPerPage;\n\n  // State for the list\n  const [list, setList] = useState([...postList.slice(0, maxPosts)]);\n\n  // State to trigger load more\n  const [loadMore, setLoadMore] = useState(false);\n\n  // State of whether there is more to load\n  const [hasMore, setHasMore] = useState(postList.length > maxPosts);\n  \n  // Load more button click handler\n  const handleLoadmore = () => {\n    setLoadMore(true);\n  };\n\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = list.length;\n      const isMore = currentLength < postList.length;\n      const nextResults = isMore\n        ? postList.slice(currentLength, currentLength + config.postsPerPage)\n        : []\n      setList([...list, ...nextResults]);\n      setLoadMore(false);\n    }\n    setHasMore(list.length < postList.length)\n  }, [loadMore])\n\n  return (\n    <>\n      <div>\n        {list.map((post, index) => {\n          return <Article key={post.title} post={post} hasThumbnail={hasThumbnail} />\n        })}\n      </div>\n      {hasMore && (\n        <div className=\"text-center mt-8 pt-3\">\n          <Button onClick={handleLoadmore}>\n            {config.btnLoadmore}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostListing;","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = config.siteUrl + config.pathPrefix + image;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;","import React from \"react\";\n\nconst WidgetContainer = ({ children }) => (\n  <aside className=\"py-4\">\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"uppercase text-3xl mb-4\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getCategoryPath } from \"../../utils/helpers\";\n\nconst Category = ({ content }) => (\n  <Link\n    key={content}\n    to={getCategoryPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Category;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport Category from \"../Category/Category\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <Category key={category} content={category} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <Link\n    key={content}\n    to={getTagPath(content)}\n  >\n    <span className=\"text-sky-500 hover:text-sky-700 text-center mr-2 mb-2 border border-gray-300 inline-block px-3 py-1\">\n      {content}\n    </span>\n  </Link>\n);\n\nexport default Tag;","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer>\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer>\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div className=\"divide-y divide-slate-300\">\n        {postList.map((post) => (\n          <div key={post.title}>\n            <span className=\"block py-2 text-sky-500 hover:text-sky-700 cursor-pointer\">\n              <Link to={post.slug}>\n                {post.title}\n              </Link>\n            </span>\n          </div>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;","import React from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer>\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div className=\"divide-y divide-slate-300\">\n          {links.map((link) => (\n            <a\n              key={link.label}\n              href={link.url}\n              className=\"block py-2 text-sky-500 hover:text-sky-700\"\n            >\n              {link.label}\n            </a>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside className=\"w-full h-full\">\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div>\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport SEO from \"../components/SEO/SEO\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport { getPostList, getTagCategoryList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    const postList = getPostList(postEdges);\n    const { tagList, categoryList } = getTagCategoryList(postList);\n\n    const content = (\n      <>\n        <PostListing\n          postList={postList}\n          hasThumbnail={config.homeHasThumbnail}\n        />\n      </>\n    );\n\n    const sidebar = (\n      <Sidebar\n        tagList={tagList}\n        categoryList={categoryList}\n        links={config.sidebarLinks}\n      />\n    );\n\n    const headerTitle = config.homeHeader\n      ? `${config.siteTitle} - ${config.homeHeader}`\n      : `${config.siteTitle}`;\n    \n    return (\n      <Layout>\n        <div>\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <Header title={headerTitle} />\n          <MainContainer content={content} sidebar={sidebar} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const indexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { template: { eq: \"post\" }, title: { ne: \"Dummy Post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["content","sidebar","className","date","config","formatDate","post","Link","to","slug","key","title","excerpt","baseImage","useStaticQuery","imagePath","cover","file","G","image","getImage","alt","hasThumbnail","PostInfo","props","postList","maxPosts","list","setList","useState","slice","loadMore","setLoadMore","hasMore","setHasMore","length","useEffect","currentLength","nextResults","map","index","onClick","SEO","render","postNode","postPath","postSEO","this","description","keywords","postURL","postMeta","frontmatter","getSrc","blogURL","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","rel","href","useSlash","type","JSON","stringify","property","Component","children","getCategoryPath","categoryList","category","getTagPath","tagList","tag","latestPostEdges","getPostList","links","link","label","WidgetLatestPosts","Index","postEdges","data","allMarkdownRemark","edges","getTagCategoryList","headerTitle","React"],"sourceRoot":""}