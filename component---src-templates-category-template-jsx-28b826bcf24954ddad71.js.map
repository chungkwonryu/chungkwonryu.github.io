{"version":3,"file":"component---src-templates-category-template-jsx-28b826bcf24954ddad71.js","mappings":"4IASA,IAPgBA,GACd,wCACEC,UAAU,eACND,G,qCCKR,IARsB,QAAC,QAAEE,GAAS,SAChC,2BAASD,UAAU,8EACjB,uBAAKA,UAAU,kCACZC,GAEK,C,kECGZ,IANiB,QAAC,KAAEC,GAAM,SACxB,uBAAKF,UAAU,yBACZG,IAAAA,WAAiB,KAAGC,EAAAA,EAAAA,IAAWF,GAC5B,C,yDCgBR,IAnBiB,IAAe,IAAd,KAAEG,GAAM,EACxB,MAAM,KAAEC,EAAI,MAAEC,EAAK,QAAEC,EAAO,KAAEN,GAASG,EACvC,OACE,uBAAKL,UAAU,QACb,gBAAC,EAAAS,KAAI,CAACC,GAAIJ,EAAMK,IAAKJ,GACnB,sBAAIP,UAAU,2DACZ,6BAAQO,KAGZ,uBAAKP,UAAU,QACZQ,GAEH,6BACE,gBAAC,IAAQ,CAACN,KAAMA,KAEd,C,yFCNV,MAVgB,IAAe,IAAd,KAAEG,GAAM,EACvB,OACE,2BACEL,UAAU,6DAEV,gBAACY,EAAA,EAAQ,CAACP,KAAMA,IACR,E,4BC+Cd,MAnDqBN,IACnB,MAAM,SAAEc,GAAad,EAGfe,EAAWX,IAAAA,cAGX,EAACY,EAAK,EAACC,IAAWC,EAAAA,EAAAA,WAAS,OAAIJ,EAASK,MAAM,EAAGJ,MAGjD,EAACK,EAAS,EAACC,IAAeH,EAAAA,EAAAA,WAAS,IAGnC,EAACI,EAAQ,EAACC,IAAcL,EAAAA,EAAAA,UAASJ,EAASU,OAAST,GAoBzD,OAbAU,EAAAA,EAAAA,YAAU,KACR,GAAIL,GAAYE,EAAS,CACvB,MAAMI,EAAgBV,EAAKQ,OAErBG,EADSD,EAAgBZ,EAASU,OAEpCV,EAASK,MAAMO,EAAeA,EAAgBtB,IAAAA,cAC9C,GACJa,EAAQ,GAAD,eAAKD,IAAI,OAAKW,KACrBN,GAAY,EACd,CACAE,EAAWP,EAAKQ,OAASV,EAASU,OAAO,GACxC,CAACJ,IAGF,gCACE,2BACGJ,EAAKY,KAAKtB,GACF,gBAAC,EAAO,CAACM,IAAKN,EAAKE,MAAOF,KAAMA,OAG1CgB,GACC,uBAAKrB,UAAU,yBACb,gBAAC4B,EAAA,EAAM,CAACC,QA1BO,KACrBT,GAAY,EAAK,GA0BRjB,IAAAA,cAIN,C,2HCZP,UA5ByB,IAA4B,IAA3B,KAAE2B,EAAI,YAAEC,GAAa,EAC7C,MAAM,SACJC,GACED,EACEE,EAAYH,EAAKI,kBAAkBC,MACnCtB,GAAWuB,EAAAA,EAAAA,IAAYH,GACvBhC,EACJ,gCACE,gBAAC,IAAW,CACVY,SAAUA,EACVwB,aAAa,KAKnB,OACE,gBAAC,IAAM,KACL,uBAAKrC,UAAU,sBACb,gBAAC,IAAM,CACLO,MAAUJ,IAAAA,eAAqB,IAAI6B,EAAQ,MAAM7B,IAAAA,YAEnD,gBAAC,IAAM,CAACI,MAAUJ,IAAAA,eAAqB,MAAM6B,IAC7C,gBAAC,IAAa,CAAC/B,QAASA,KAEnB,C","sources":["webpack://gatsby-starter-blog/./src/components/Button/Button.jsx","webpack://gatsby-starter-blog/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-starter-blog/./src/components/Post/PostDate.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/Article.jsx","webpack://gatsby-starter-blog/./src/components/PostListing/PostListing.jsx","webpack://gatsby-starter-blog/./src/templates/category-template.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Button = (props) => (\n  <button\n    className=\"btn-primary\"\n    {...props}\n  />\n);\n\nexport default Button;","import React from \"react\";\n\nconst MainContainer = ({ content }) => (\n  <section className=\"flex flex-col lg:flex-row mx-auto max-w-full py-0 px-6 w-full min-h-[80vh]\">\n    <div className=\"flex w-full flex-col pb-8 pt-3\">\n      {content}\n    </div>\n  </section>\n);\n\nexport default MainContainer;","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date }) => (\n  <div className=\"text-neutral-500 pb-4\">\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;","import React from \"react\";\nimport PostDate from \"../Post/PostDate\";\nimport { Link } from \"gatsby\";\n\nconst PostInfo = ({ post }) => {\n  const { slug, title, excerpt, date } = post;\n  return (\n    <div className=\"mt-4\">\n      <Link to={slug} key={title} >\n        <h2 className=\"text-3xl font-bold mb-2 text-sky-500 hover:text-sky-700\">\n          <small>{title}</small>\n        </h2>\n      </Link>\n      <div className=\"mb-4\">\n        {excerpt}\n      </div>\n      <small>\n        <PostDate date={date} />\n      </small>\n    </div>\n  )\n};\n\nexport default PostInfo;","import React from \"react\";\nimport PostInfo from \"./PostInfo\";\n\nconst Article = ({ post }) => {\n  return (\n    <article\n      className=\"flex flex-col items-start py-3 border-b-2 border-gray-200\"\n    >\n      <PostInfo post={post} />\n    </article>\n  );\n};\n\nexport default Article;","import React, { useEffect, useState } from \"react\";\nimport Article from \"./Article\";\nimport Button from \"../Button/Button\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostListing = (props) => {\n  const { postList } = props;\n\n  // current max posts to show\n  const maxPosts = config.postsPerPage;\n\n  // State for the list\n  const [list, setList] = useState([...postList.slice(0, maxPosts)]);\n\n  // State to trigger load more\n  const [loadMore, setLoadMore] = useState(false);\n\n  // State of whether there is more to load\n  const [hasMore, setHasMore] = useState(postList.length > maxPosts);\n  \n  // Load more button click handler\n  const handleLoadmore = () => {\n    setLoadMore(true);\n  };\n\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = list.length;\n      const isMore = currentLength < postList.length;\n      const nextResults = isMore\n        ? postList.slice(currentLength, currentLength + config.postsPerPage)\n        : []\n      setList([...list, ...nextResults]);\n      setLoadMore(false);\n    }\n    setHasMore(list.length < postList.length)\n  }, [loadMore])\n\n  return (\n    <>\n      <div>\n        {list.map((post) => {\n          return <Article key={post.title} post={post} />\n        })}\n      </div>\n      {hasMore && (\n        <div className=\"text-center mt-8 pt-3\">\n          <Button onClick={handleLoadmore}>\n            {config.btnLoadmore}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PostListing;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport {\n  getPostList,\n} from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nconst CategoryTemplate = ({ data, pageContext }) => {\n  const {\n    category,\n  } = pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const postList = getPostList(postEdges);\n  const content = (\n    <>\n      <PostListing\n        postList={postList}\n        hasLoadmore={false}\n      />\n    </>\n  );\n\n  return (\n    <Layout>\n      <div className=\"category-container\">\n        <Helmet\n          title={`${config.categoryHeader} ${category} - ${config.siteTitle}`}\n        />\n        <Header title={`${config.categoryHeader} - ${category}`} />\n        <MainContainer content={content} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default CategoryTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        frontmatter: {\n          categories: { in: [$category] }\n          template: { eq: \"post\" }\n          title: {ne: \"Dummy Post\" }\n        }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;"],"names":["props","className","content","date","config","formatDate","post","slug","title","excerpt","Link","to","key","PostInfo","postList","maxPosts","list","setList","useState","slice","loadMore","setLoadMore","hasMore","setHasMore","length","useEffect","currentLength","nextResults","map","Button","onClick","data","pageContext","category","postEdges","allMarkdownRemark","edges","getPostList","hasLoadmore"],"sourceRoot":""}